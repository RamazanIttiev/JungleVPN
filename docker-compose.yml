services:
  postgres:
    image: postgres:16-alpine
    container_name: vpn_postgres
    env_file:
      - ./backend/.env
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U vpn -d vpn" ]
      interval: 5s
      timeout: 5s
      retries: 10

  backend:
    build:
      context: ./backend
    container_name: vpn_backend
    env_file:
      - ./backend/.env
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    # Allow backend to manage WireGuard inside container (advanced, prod only)
    privileged: true
    cap_add:
      - NET_ADMIN
    volumes:
      - /etc/wireguard:/etc/wireguard

  bot:
    build:
      context: ./bot
    container_name: vpn_bot
    env_file:
      - ./bot/.env
    depends_on:
      - backend

volumes:
  pgdata:
